TODO
====
- 	Working Python tokeniser.
-	Write the expression evaluator
- 	Write the basic executor and tokeniser and implement ASSERT.
- 	variables defint a-z and # (real) % (int) $ (string)

Fixes
=====
- 	Proper insert/delete in line editing.
- 	Add X to Monitor (warm start BASIC)
- 	FP optimisations for 4510 extended.
		- Anything in FPMacros (check XYZ usage for non shifts - may not be worth it)		
		- Integer negation in fputils.asm
		- Mantissa subtraction in fpdivide.asm
-	FP guard byte on subtract ????


Tokenising
==========

00		End
01-3F 	PETSCII (identifiers mostly)
40-7F 	Encoded 6 bit integers (can be chained)
80-FB 	Basic tokens
FC-FD	Token shifts (to 80-FB only)
FE xx 	ASCIIZ decimal sequence
FF xx 	ASCIIZ string sequence

Token order
===========
Binary operators 	- Precedence look up table
Unary functions 	- LEN ABS SGN RND etc.
Syntax Elements 	- things that are used as regular syntax items , ; etc.
Syntax + 			- things that open a structure while repeat if for
Syntax - 			- things that close a structure wend until then endif next

General commands and specific syntax markers like TO STEP

The sections are differentiated by constants ; LUT only exists for the first.
(If we get there, $FC80-$FCxx will be allocated for horrible things like EXP())

Memory functions
================
Change program line.
To start
To next
To Line Number
Read
Increment Ptr.
